# Set of Macros to remind you to check wear on certain replaceable parts on your klipper printer
# 
# The original version of this file can always be found at https://github.com/Mr-Badgers/KlipperMacros/
#
# Usage:
#
# NOTE: `[save_variables]` must be present in your configuration in order for this to work.
# 
# Instructions:
# 1. Add the following two lines to your printer.cfg:
# [save_variables]
# filename: ~/printer_data/config/saved_variables.cfg
# 
# 2. Include this file in your main printer.cfg by adding:
# [include part_maintenance_timer.cfg]
#
# [WIP Update] 3. Check the Configuration section below, and update the variables if necessary. 
# The following variables may have to be renamed so they match your configuration:
# 'fan_generic' (yours may be a 'variable_fan' or 'heater_fan')
# 'air_filter' (yours may be 'nevermore_fans')
# 
# The default configuration is set up to work with a `fan_generic` called `air_filter`.
#
# Operation:
# After your air filter has run for the configured amount of time, the replacement_gcode will be run 
# every 1 second until `RESET_AIR_FILTER` is executed.  by default this displays a message on the LCD.
# 
# You may query the current time on the filter by running `QUERY_AIR_FILTER`



[gcode_macro _AIR_FILTER_VARIABLES]

## Configuration

variable_fan: 'fan_generic air_filter'                     # The part to track.
variable_hours_until_replacement: 50                       # total hours the printer has been actively printing before message comes up
variable_replacement_gcode: 'M117 It has been Xhrs since you last checked your Y'    # gcode to run when the part needs to be replaced (will be repeated every second until reset)

#########################################
###### Do not edit below this line ######
#########################################
variable_time: -1
gcode:


[gcode_macro RESET_AIR_FILTER]
description: Resets the air-filter replacement timer
gcode:
  SET_GCODE_VARIABLE MACRO=_AIR_FILTER_VARIABLES VARIABLE=time VALUE=0
  SAVE_VARIABLE VARIABLE=air_filter_time VALUE=0
  { action_respond_info("Air filter timer has been reset.") }


[gcode_macro QUERY_AIR_FILTER]
description: Displays the amount of time the air filter has run since it was last reset.
gcode:
  {% set hours = "%.2f"|format(printer['gcode_macro _AIR_FILTER_VARIABLES'].time|int / 3600) %}
  { action_respond_info("Air Filter Hours: " + hours) }


[delayed_gcode _AIR_FILTER_TIMER]
initial_duration: 1
gcode:
  {% set cached_time = printer['gcode_macro _AIR_FILTER_VARIABLES'].time|int %}
    {% if cached_time == -1 %}
      {% set cached_time = printer.save_variables.variables.air_filter_time|default(0) %}
      SET_GCODE_VARIABLE MACRO=_AIR_FILTER_VARIABLES VARIABLE=time VALUE={ cached_time }
    {% endif %}
  {% if printer[printer['gcode_macro _AIR_FILTER_VARIABLES'].fan].speed|float > 0 %}
    SET_GCODE_VARIABLE MACRO=_AIR_FILTER_VARIABLES VARIABLE=time VALUE={ cached_time + 1}
  {% endif %}
  {% set replacement_seconds = printer['gcode_macro _AIR_FILTER_VARIABLES'].hours_until_replacement|float * 3600 %}
  {% if cached_time > replacement_seconds %}
  { printer['gcode_macro _AIR_FILTER_VARIABLES'].replacement_gcode }
  {% endif %}
  UPDATE_DELAYED_GCODE ID=_AIR_FILTER_TIMER DURATION=1


[delayed_gcode _AIR_FILTER_FLUSH_TIMER]
initial_duration: 300
gcode:
  {% set saved_time = printer.save_variables.variables.air_filter_time|default(0)|float %}
  {% set actual_time = printer['gcode_macro _AIR_FILTER_VARIABLES'].time|float %}
  {% if saved_time != actual_time %}
    SAVE_VARIABLE VARIABLE=air_filter_time VALUE={actual_time}
  {% endif %}
  UPDATE_DELAYED_GCODE ID=_AIR_FILTER_FLUSH_TIMER DURATION=300
